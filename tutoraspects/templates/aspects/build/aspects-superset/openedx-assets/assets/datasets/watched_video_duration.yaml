_file_name: watched_video_duration.yaml
always_filter_main_dttm: false
cache_timeout: null
columns:
- advanced_data_type: null
  column_name: rewatched_percent
  description: null
  expression: case when rewatched = 1 then watched_duration else 0 end/video_duration
  extra:
    warning_markdown: null
  filterable: true
  groupby: true
  is_active: true
  is_dttm: false
  python_date_format: null
  type: null
  verbose_name: '% Video Seconds Re-Watched'
- advanced_data_type: null
  column_name: watched_percent
  description: null
  expression: case when rewatched = 0 then watched_duration else 0 end/video_duration
  extra:
    warning_markdown: null
  filterable: true
  groupby: true
  is_active: true
  is_dttm: false
  python_date_format: null
  type: null
  verbose_name: '% Video Seconds Watched'
- advanced_data_type: null
  column_name: course_name
  description: null
  expression: ''
  extra:
    warning_markdown: null
  filterable: true
  groupby: true
  is_active: true
  is_dttm: false
  python_date_format: null
  type: String
  verbose_name: Course Name
- advanced_data_type: null
  column_name: course_run
  description: null
  expression: null
  extra:
    warning_markdown: null
  filterable: true
  groupby: true
  is_active: true
  is_dttm: false
  python_date_format: null
  type: String
  verbose_name: Course Run
- advanced_data_type: null
  column_name: totals.org
  description: null
  expression: null
  extra:
    warning_markdown: null
  filterable: true
  groupby: true
  is_active: true
  is_dttm: false
  python_date_format: null
  type: LowCardinality(String)
  verbose_name: Totals.Org
- advanced_data_type: null
  column_name: avg_video_length
  description: null
  expression: null
  extra:
    warning_markdown: null
  filterable: true
  groupby: true
  is_active: true
  is_dttm: false
  python_date_format: null
  type: Float64
  verbose_name: Avg Video Length
- advanced_data_type: null
  column_name: count_videos
  description: null
  expression: null
  extra:
    warning_markdown: null
  filterable: true
  groupby: true
  is_active: true
  is_dttm: false
  python_date_format: null
  type: UInt64
  verbose_name: Count Videos
- advanced_data_type: null
  column_name: watched_duration
  description: null
  expression: null
  extra:
    warning_markdown: null
  filterable: true
  groupby: true
  is_active: true
  is_dttm: false
  python_date_format: null
  type: Int64
  verbose_name: Watched Duration
- advanced_data_type: null
  column_name: video_duration
  description: null
  expression: null
  extra:
    warning_markdown: null
  filterable: true
  groupby: true
  is_active: true
  is_dttm: false
  python_date_format: null
  type: Int64
  verbose_name: Video Duration
- advanced_data_type: null
  column_name: rewatched
  description: null
  expression: null
  extra:
    warning_markdown: null
  filterable: true
  groupby: true
  is_active: true
  is_dttm: false
  python_date_format: null
  type: UInt8
  verbose_name: Rewatched
database_uuid: 21174b6c-4d40-4958-8161-d6c3cf5e77b6
default_endpoint: null
description: null
extra: null
fetch_values_predicate: null
filter_select_enabled: true
main_dttm_col: null
metrics:
- currency: null
  d3format: null
  description: null
  expression: count(*) - count(distinct actor_id)
  extra:
    warning_markdown: ''
  metric_name: repeat_views
  metric_type: null
  verbose_name: Repeat Views
  warning_text: null
- currency: null
  d3format: null
  description: null
  expression: count(distinct actor_id)
  extra:
    warning_markdown: ''
  metric_name: unique_viewers
  metric_type: null
  verbose_name: Unique Viewers
  warning_text: null
- currency: null
  d3format: null
  description: null
  expression: count(*)
  extra:
    warning_markdown: ''
  metric_name: total_views
  metric_type: null
  verbose_name: Total Views
  warning_text: null
- currency: null
  d3format: null
  description: null
  expression: COUNT(*)
  extra:
    warning_markdown: ''
  metric_name: count
  metric_type: count
  verbose_name: COUNT(*)
  warning_text: null
normalize_columns: true
offset: 0
params: null
schema: reporting
sql: "\nwith\n    video_events as (\n        select *, splitByString('/xblock/', object_id)[-1]\
  \ as video_id\n        from xapi.video_playback_events\n    )\n    , totals as (\n\
  \        select org, course_key, count(distinct video_id) as count_videos, avg(video_duration)\
  \ as avg_video_length\n        from video_events\n        group by org, course_key\n\
  \      )\n    , starts as (\n        select org,course_key,actor_id,emission_time,\
  \ cast(video_position as Int32) as start_position, video_id, video_duration\n  \
  \      from video_events\n        where verb_id = 'https://w3id.org/xapi/video/verbs/played'\n\
  \    )    \n    , ends as (\n        select org,course_key,actor_id,emission_time,\
  \ cast(video_position as Int32) as end_position, video_id\n        from video_events\n\
  \        where\n            verb_id in (\n                'http://adlnet.gov/expapi/verbs/completed',\n\
  \                'https://w3id.org/xapi/video/verbs/seeked',\n                'https://w3id.org/xapi/video/verbs/paused',\n\
  \                'http://adlnet.gov/expapi/verbs/terminated'\n            )\n  \
  \  )\n    , rewatches as (\n      select org, course_key, video_id, actor_id, start_position\n\
  \      from starts\n      group by org, course_key, video_id, actor_id, start_position\n\
  \      having count(1) > 1\n    )\n    , duration as (\n        select \n      \
  \    starts.org as org, \n          starts.course_key as course_key,\n         \
  \ starts.actor_id as actor_id,\n          video_duration,\n          starts.start_position\
  \ - end_position as watched_duration,\n          case when rewatches.org <> '' then\
  \ 1 else 0 end as rewatched\n        from starts\n        left asof join ends on\
  \ \n                  starts.org = ends.org\n                  and starts.course_key\
  \ = ends.course_key\n                  and starts.video_id = ends.video_id\n   \
  \               and starts.actor_id = ends.actor_id\n                  and starts.emission_time\
  \ < ends.emission_time\n        left join rewatches on \n            rewatches.org\
  \ = starts.org and \n            rewatches.course_key = starts.course_key and \n\
  \            rewatches.actor_id = starts.actor_id and \n            rewatches.start_position\
  \ = starts.start_position AND\n            rewatches.video_id = starts.video_id\n\
  \    )\n      select \n        totals.org, \n        names.course_name as course_name,\
  \ \n        names.course_run as course_run, \n        count_videos, \n        avg_video_length,\
  \ \n        video_duration,\n        watched_duration,\n        rewatched\n    \
  \  from duration\n      left join totals using org, course_key\n      left join\
  \ event_sink.course_names as names using org, course_key\n        \n      {% if\
  \ filter_values(\"tag\") != [] %}\n          where course_key in (\n           \
  \   select course_key\n              from reporting.course_tags a \n           \
  \   where tag in (select replaceAll(arrayJoin({{ filter_values(\"tag\") }}),'- ',''))\n\
  \          )\n      {% endif %}\n\n        \n        "
table_name: watched_video_duration
template_params: null
uuid: 82cb6b56-c713-4933-93a0-9de15c266c4b
version: 1.0.0
